---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates a secure S3 bucket for Minecraft server configuration and artifacts'

Metadata:
  AWS::CloudFormation::Stack:
    Tags:
      - Key: 'Application'
        Value: 'Minecraft'


Parameters:
  StackNamePrefix:
    Type: 'String'
    Description: 'Prefix for CloudFormation stacks this role can manage'
    Default: 'minecraft'

  AccessLogsBucket:
    Type: 'String'
    Description: 'ARN of the account access logs bucket'
    Default: 'no-set'


Conditions:
  HasAccessLogsBucket: !Not
    - !Equals
      - 'no-set'
      - !Ref 'AccessLogsBucket'

Resources:
  MinecraftBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: 'Delete'
    UpdateReplacePolicy: 'Retain'
    Properties:
      BucketName: !Sub '${StackNamePrefix}-${AWS::StackName}'
      VersioningConfiguration:
        Status: 'Enabled'

      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
            BucketKeyEnabled: true

      LoggingConfiguration: !If
        - 'HasAccessLogsBucket'
        - DestinationBucketName: !Ref 'AccessLogsBucket'
          LogFilePrefix: !Sub '${StackNamePrefix}-${AWS::StackName}/'
        - !Ref 'AWS::NoValue'

      LifecycleConfiguration:
        Rules:
          - Id: 'DeleteOldVersions'
            Status: 'Enabled'
            NoncurrentVersionExpiration:
              NoncurrentDays: 90
          - Id: 'AbortIncompleteUploads'
            Status: 'Enabled'
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7


  MinecraftBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref 'MinecraftBucket'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'EnforceSSLOnly'
            Effect: 'Deny'
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !Sub '${MinecraftBucket.Arn}/*'
              - !GetAtt 'MinecraftBucket.Arn'
            Condition:
              Bool:
                'aws:SecureTransport': false

          - Sid: 'EnforceSecureCommunication'
            Effect: 'Deny'
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !Sub '${MinecraftBucket.Arn}/*'
              - !GetAtt 'MinecraftBucket.Arn'
            Condition:
              NumericLessThan:
                's3:TlsVersion': 1.2


Outputs:
  BucketName:
    Description: 'Name of the created S3 bucket'
    Value: !Ref 'MinecraftBucket'
    Export:
      Name: !Sub '${AWS::StackName}-bucket-name'

  BucketArn:
    Description: 'ARN of the created S3 bucket'
    Value: !GetAtt 'MinecraftBucket.Arn'
    Export:
      Name: !Sub '${AWS::StackName}-bucket-arn'
