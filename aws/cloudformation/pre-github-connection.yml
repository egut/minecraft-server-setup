---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates GitHub OIDC provider and IAM role for GitHub Actions'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'GitHub Configuration'
        Parameters:
          - 'GitHubOrg'
          - 'RepositoryName'
          - 'StackNamePrefix'
    ParameterLabels:
      GitHubOrg:
        default: 'GitHub Organization'
      RepositoryName:
        default: 'Repository Name'
      StackNamePrefix:
        default: 'Stack Name Prefix'

  AWS::CloudFormation::Stack:
    Tags:
      - Key: 'Application'
        Value: 'Minecraft'

Parameters:
  GitHubOrg:
    Type: 'String'
    Description: 'GitHub organization or username'

  RepositoryName:
    Type: 'String'
    Description: 'GitHub repository name'

  StackNamePrefix:
    Type: 'String'
    Description: 'Prefix for CloudFormation stacks this role can manage'
    Default: 'minecraft'

Resources:
  GitHubOIDCProvider:
    Type: 'AWS::IAM::OIDCProvider'
    Properties:
      Url: 'https://token.actions.githubusercontent.com'
      ClientIdList:
        - 'sts.amazonaws.com'
      ThumbprintList:
        - '6938fd4d98bab03faadb97b34396831e3780aea1'
      Tags:
        - Key: 'Purpose'
          Value: 'GitHubActions'
        - Key: 'Application'
          Value: 'Minecraft'

  GitHubActionsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AWS::StackName}-github-actions-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Federated: !GetAtt 'GitHubOIDCProvider.Arn'
            Action: 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com'
              StringLike:
                'token.actions.githubusercontent.com:sub': !Sub 'repo:${GitHubOrg}/${RepositoryName}:*'

      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/PowerUserAccess'

      Policies:
        - PolicyName: 'PassRolePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'iam:PassRole'
                Resource: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${StackNamePrefix}-*'
                Condition:
                  StringEquals:
                    'iam:PassedToService': 'cloudformation.amazonaws.com'

      PermissionsBoundary: !Ref 'PermissionsBoundary'
      Tags:
        - Key: 'Application'
          Value: 'Minecraft'


  PermissionsBoundary:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${StackNamePrefix}-boundary'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          # CloudFormation permissions
          - Effect: 'Allow'
            Action:
              - 'cloudformation:CreateChangeSet'
              - 'cloudformation:CreateStack'
              - 'cloudformation:DeleteChangeSet'
              - 'cloudformation:DeleteStack'
              - 'cloudformation:DescribeChangeSet'
              - 'cloudformation:DescribeStackEvents'
              - 'cloudformation:DescribeStackResource'
              - 'cloudformation:DescribeStackResources'
              - 'cloudformation:DescribeStacks'
              - 'cloudformation:ExecuteChangeSet'
              - 'cloudformation:GetTemplateSummary'
              - 'cloudformation:SetStackPolicy'
              - 'cloudformation:UpdateStack'
              - 'cloudformation:ValidateTemplate'
            Resource: !Sub
              'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${StackNamePrefix}-*/*'

          # Global CloudFormation list/describe permissions
          - Effect: 'Allow'
            Action:
              - 'cloudformation:DescribeStacks'
              - 'cloudformation:ListStackResources'
              - 'cloudformation:ListStacks'
            Resource: '*'

          - Effect: 'Allow'
            NotAction:
              - 'cloudformation:*'
            Resource: '*'
            Condition:
              StringEquals:
                'aws:RequestTag/Application': 'Minecraft'

          # S3 permissions
          - Effect: 'Allow'
            Action: 's3:*'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${StackNamePrefix}-*'
              - !Sub 'arn:${AWS::Partition}:s3:::${StackNamePrefix}-*/*'

          # VPC/EC2 read-only permissions
          - Effect: 'Allow'
            Action:
              - 'ec2:Describe*'
            Resource: '*'

          # VPC/EC2 write permissions with constraints
          - Effect: 'Allow'
            Action:
              - 'ec2:AllocateAddress'
              - 'ec2:AssociateAddress'
              - 'ec2:AssociateRouteTable'
              - 'ec2:AttachInternetGateway'
              - 'ec2:CreateInternetGateway'
              - 'ec2:CreateNatGateway'
              - 'ec2:CreateRoute'
              - 'ec2:CreateRouteTable'
              - 'ec2:CreateSubnet'
              - 'ec2:CreateTags'
              - 'ec2:CreateVpc'
              - 'ec2:DeleteInternetGateway'
              - 'ec2:DeleteNatGateway'
              - 'ec2:DeleteRoute'
              - 'ec2:DeleteRouteTable'
              - 'ec2:DeleteSubnet'
              - 'ec2:DeleteTags'
              - 'ec2:DeleteVpc'
              - 'ec2:DetachInternetGateway'
              - 'ec2:DisassociateAddress'
              - 'ec2:DisassociateRouteTable'
              - 'ec2:ModifySubnetAttribute'
              - 'ec2:ModifyVpcAttribute'
              - 'ec2:ReleaseAddress'
            Resource: '*'
            Condition:
              StringEquals:
                'aws:CalledVia': ['cloudformation.amazonaws.com']
              StringLike:
                'aws:ResourceTag/aws:cloudformation:stack-name':
                  !Sub '${StackNamePrefix}-*'

          # Allow tagging during resource creation
          - Effect: 'Allow'
            Action:
              - 'ec2:CreateTags'
            Resource: '*'
            Condition:
              StringEquals:
                'aws:CalledVia': ['cloudformation.amazonaws.com']

          # Allow passing roles to CloudFormation
          - Effect: 'Allow'
            Action: 'iam:PassRole'
            Resource: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${StackNamePrefix}-*'
            Condition:
              StringEquals:
                'iam:PassedToService': 'cloudformation.amazonaws.com'

          # Lambda permissions
          - Effect: 'Allow'
            Action:
              - 'lambda:CreateFunction'
              - 'lambda:DeleteFunction'
              - 'lambda:DeleteFunctionConcurrency'
              - 'lambda:GetFunction'
              - 'lambda:InvokeFunction'
              - 'lambda:PutFunctionConcurrency'
              - 'lambda:UpdateFunctionCode'
              - 'lambda:UpdateFunctionConfiguration'
            Resource: !Sub 'arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${StackNamePrefix}-*'

          # IAM permissions for Lambda role
          - Effect: 'Allow'
            Action:
              - 'iam:CreateRole'
              - 'iam:DeleteRole'
              - 'iam:GetRole'
              - 'iam:PutRolePolicy'
              - 'iam:DeleteRolePolicy'
              - 'iam:AttachRolePolicy'
              - 'iam:DetachRolePolicy'
            Resource: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${StackNamePrefix}-*'
            Condition:
              StringEquals:
                'aws:CalledVia': ['cloudformation.amazonaws.com']

          # Allow Lambda to assume role
          - Effect: 'Allow'
            Action: 'iam:PassRole'
            Resource: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${StackNamePrefix}-*'
            Condition:
              StringLike:
                'iam:PassedToService': 'lambda.amazonaws.com'

          - Effect: 'Allow'
            NotAction:
              - 'organizations:*'
              - 'account:*'
            Resource: '*'
            Condition:
              StringEquals:
                'aws:CalledVia': ['cloudformation.amazonaws.com']
              StringLike:
                'aws:ResourceTag/aws:cloudformation:stack-name':
                  !Sub '${StackNamePrefix}-*'

          - Effect: 'Deny'
            NotAction:
              - 'cloudformation:*'
            Resource: '*'
            Condition:
              StringNotEquals:
                'aws:CalledVia': ['cloudformation.amazonaws.com']


Outputs:
  OIDCProviderArn:
    Description: 'ARN of the GitHub OIDC provider'
    Value: !GetAtt 'GitHubOIDCProvider.Arn'

  RoleArn:
    Description: 'ARN of the IAM role for GitHub Actions'
    Value: !GetAtt 'GitHubActionsRole.Arn'
