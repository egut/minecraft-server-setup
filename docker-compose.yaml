---
version: "3.8"

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

services:
  minecraft:
    image: 'itzg/minecraft-server:latest'
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    ports:
      - '25565:25565'
    #  - '24454:24454/udp'
    environment:
      DIFFICULTY: 'hard'
      ENABLE_ROLLING_LOGS: 'TRUE'
      ENABLE_WHITELIST: 'TRUE'
      ENABLE_JMX: 'TRUE'
      EULA: "TRUE"
      INIT_MEMORY: '1G'
      MAX_MEMORY: '8G'
      MODRINTH_LOADER: 'FABRIC'
      MODRINTH_PROJECT: 'allexio-create+'
      MODRINTH_VERSION: '1.0.0'
      MOTD: "Allexio's Create Plus"
      OPS: "egut"
      SERVER_NAME: "Allexio's Create Plus"
      SERVER_PORT: 25565
      SIMULATION_DISTANCE: 16
      TYPE: 'MODRINTH'
      USE_AIKAR_FLAGS: 'TRUE'
      VANILLATWEAKS_SHARECODE: 'ilFuDN'
      VERSION: "1.20.1"
      VIEW_DISTANCE: 24
    tty: true
    stdin_open: true
    restart: 'unless-stopped'
    volumes:
      - './minecraft/mc-server:/data'
      - './minecraft/mc-world:/data/world'
      - '/etc/localtime:/etc/localtime:ro'
    logging: *default-logging
    networks:
      - 'minecraft'

  restore-backup:
    image: 'itzg/mc-backup:latest'
    restart: 'no'
    entrypoint: 'restore-tar-backup'
    volumes:
      - './minecraft/mc-server:/data'
      - './minecraft/mc-world:/data/world'
      - './backup:/backups:ro'
      - '/etc/localtime:/etc/localtime:ro'

    networks:
      - 'minecraft'

  backups:
    image: 'itzg/mc-backup:latest'
    depends_on:
      minecraft:
        condition: 'service_healthy'
    environment:
      BACKUP_INTERVAL: "6h"
      RCON_HOST: 'minecraft'
      PAUSE_IF_NO_PLAYERS: 'TRUE'
      PLAYERS_ONLINE_CHECK_INTERVAL: '15m'
      PRUNE_BACKUPS_DAYS: 14
      INITIAL_DELAY: 0
    volumes:
      - './minecraft/mc-server:/data:ro'
      - './minecraft/mc-world:/data/world:ro'
      - './backup:/backups'
      - '/etc/localtime:/etc/localtime:ro'

    networks:
      - 'minecraft'


  cadvisor:
    image: 'gcr.io/cadvisor/cadvisor:v0.47.2'
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    networks:
      - 'admin'

  node-exporter:
    image: 'prom/node-exporter:latest'
    restart: 'unless-stopped'
    networks:
      - 'admin'

  prometheus:
    image: 'prom/prometheus'
    # If you need to expose Prometheus to localhost, uncommon
    # ports:
    #   - '9090:9090'
    volumes:
      - './services/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
      - 'prometheus:/prometheus'
      - '/etc/localtime:/etc/localtime:ro'

    depends_on:
      - 'node-exporter'
      - 'cadvisor'
    networks:
      - 'admin'
      - 'minecraft'

  grafana:
    image: 'grafana/grafana-oss:latest'
    # ports:
    #   - '3000:3000'
    volumes:
      - './services/grafana/provisioning:/etc/grafana/provisioning'
      - './services/grafana/dashboards:/etc/grafana/dashboards'
      - 'grafana:/var/lib/grafana'
      - '/etc/localtime:/etc/localtime:ro'

    environment:
      GF_SERVER_DOMAIN: '${SERVER_NAME}'
      GF_SERVER_HTTP_PORT: 3000
      GF_SERVER_PROTOCOL: 'http'
      GF_SERVER_ROOT_URL: "http://${SERVER_NAME}/grafana/"

      # For Grafana 10 the GF_SERVER_SERVE_FROM_SUB_PATH must be set to 'false'
      # earlier versions require this to be set to 'true'
      GF_SERVER_SERVE_FROM_SUB_PATH: "false"
      GF_UID: '1000'
    user: '1000'

    depends_on:
      - 'prometheus'

    networks:
      - 'admin'
      - 'web'

  loki:
    image: 'grafana/loki:latest'
    ports:
      - '3100:3100'
    command: '-config.file=/etc/loki/local-config.yaml'
    networks:
      - 'admin'
    logging: *default-logging
    volumes:
      - 'loki:/loki'
      - '/etc/localtime:/etc/localtime:ro'

  promtail:
    image: 'grafana/promtail:latest'
    command: '-config.file=/etc/promtail/docker-config.yaml'
    volumes:
      - './services/promtail/config/promtail.yml:/etc/promtail/docker-config.yaml'
      - '/var/lib/docker/containers:/var/lib/docker/containers:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/etc/localtime:/etc/localtime:ro'

    depends_on:
      - 'loki'

    networks:
      - 'admin'

    logging: *default-logging

  # Additional BlueMaps addons
  # https://bluemap.bluecolored.de/community/3rdPartySupport.html
  bluemap:
    image: 'ghcr.io/bluemap-minecraft/bluemap:latest'
    # ports:
    #  - '8100:8100'
    restart: 'unless-stopped'
    command: '-r -u -w'
    volumes:
      - './services/bluemap/config:/app/config'
      - './services/bluemap/data:/app/data'
      - './services/bluemap/web:/app/web'
      - './minecraft/mc-world:/app/world'
      - './minecraft/mc-server/mods:/app/config/resourcepacks:ro'
      - '/etc/localtime:/etc/localtime:ro'

    depends_on:
      minecraft:
        condition: 'service_healthy'
    logging: *default-logging
    user: '1000'
    networks:
      - 'minecraft'
      - 'web'

  nginx:
    image: 'nginx:alpine'
    restart: 'unless-stopped'
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    ports:
      - '8443:443'
      - '8080:8080'
    volumes:
      # For cert handling
      # - './services/certbot/conf:/etc/letsencrypt:ro'
      # - './services/certbot/www:/var/www/certbot:ro'

      # For web pages
      - './services/nginx/html:/usr/share/nginx/html:ro'

      # For Nginx configuration
      - './services/nginx/templates:/etc/nginx/templates:ro'
      - '/etc/localtime:/etc/localtime:ro'

    environment:
      NGINX_HOST: '${SERVER_NAME}'
      NGINX_PORT: '8080'
    logging: *default-logging

    depends_on:
      - 'grafana'
      - 'bluemap'

    networks:
      - 'web'

  # certbot:
  #   image: 'certbot/certbot'
  #   restart: 'unless-stopped'
  #   volumes:
  #     - './minecraft/certbot/conf:/etc/letsencrypt'
  #     - './minecraft/certbot/www:/var/www/certbot:rw'
  #     - '/etc/localtime:/etc/localtime:ro'

volumes:
  prometheus: {}
  grafana: {}
  loki: {}

networks:
  minecraft:
  admin:
  web:
