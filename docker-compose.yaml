---
version: "3.8"

services:
  minecraft:
    image: 'itzg/minecraft-server:latest'
    ports:
      - '25565:25565'
      - '25585'
      - '24454:24454/udp'
    environment:
      DIFFICULTY: 'hard'
      ENABLE_ROLLING_LOGS: 'TRUE'
      ENABLE_WHITELIST: 'TRUE'
      EULA: "TRUE"
      INIT_MEMORY: '1G'
      MAX_MEMORY: '8G'
      MODRINTH_LOADER: 'FABRIC'
      MODRINTH_PROJECT: 'allexio-create+'
      MODRINTH_VERSION: '1.0.0'
      MOTD: "Allexio's Create Plus"
      OPS: "egut"
      SERVER_NAME: "Allexio's Create Plus"
      SIMULATION_DISTANCE: 16
      TYPE: 'MODRINTH'
      USE_AIKAR_FLAGS: 'TRUE'
      VANILLATWEAKS_SHARECODE: 'ilFuDN'
      VERSION: "1.20.1"
      VIEW_DISTANCE: 24

    tty: true
    stdin_open: true
    restart: 'unless-stopped'
    volumes:
      - './minecraft/mc-server:/data'
      - './minecraft/mc-world:/data/world'
      - '/etc/localtime:/etc/localtime:ro'

  bluemap:
    image: 'ghcr.io/bluemap-minecraft/bluemap:latest'
    restart: 'unless-stopped'
    command: '-r -u -w'
    ports:
      - '8100:8100'
    volumes:
      - './minecraft/bluemap/config:/app/config'
      - './minecraft/bluemap/data:/app/data'
      - './minecraft/bluemap/web:/app/web'
      - './minecraft/mc-world:/app/world'
      - '/etc/localtime:/etc/localtime:ro'
    depends_on:
      minecraft:
        condition: 'service_healthy'

  # "init" container for mc to restore the data volume when empty
  restore-backup:
    # Same image as mc, but any base image with bash and tar will work
    image: 'itzg/mc-backup:latest'
    restart: 'no'
    entrypoint: 'restore-tar-backup'
    volumes:
      # Must be same mount as mc service, needs to be writable
      - './minecraft/mc-server:/data'
      - './minecraft/mc-world:/data/world:ro'
      # Must be same mount as backups service, but can be read-only
      - './minecraft/backup:/backups:ro'
      - '/etc/localtime:/etc/localtime:ro'

  backups:
    image: 'itzg/mc-backup:latest'
    depends_on:
      minecraft:
        condition: 'service_healthy'
    environment:
      BACKUP_INTERVAL: "6h"
      RCON_HOST: 'mc'
      PAUSE_IF_NO_PLAYERS: 'TRUE'
      PLAYERS_ONLINE_CHECK_INTERVAL: '15m'
      PRUNE_BACKUPS_DAYS: 14
      INITIAL_DELAY: 0
    volumes:
      - './minecraft/mc-server:/data:ro'
      - './minecraft/mc-world:/data/world:ro'
      - './minecraft/backup:/backups'
      - '/etc/localtime:/etc/localtime:ro'

  monitor:
    image: 'itzg/mc-monitor'
    command: 'export-for-prometheus'
    environment:
      EXPORT_SERVERS: 'minecraft'
      DEBUG: "true"
    depends_on:
      - 'minecraft'

  cadvisor:
    image: 'gcr.io/cadvisor/cadvisor:v0.47.2'
    ports:
      - "8180:8080"
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'

  prometheus:
    image: 'prom/prometheus'
    ports:
      - '9090:9090'
    volumes:
      - './minecraft/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
      - 'prometheus-tsdb:/prometheus'
    depends_on:
      - 'monitor'

  grafana:
    image: 'grafana/grafana-oss:${GRAFANA_VERSION:-8.3.3}'
    ports:
      - "3000:3000"
    volumes:
      - 'grafana-lib:/var/lib/grafana'
      - './minecraft/grafana/provisioning:/etc/grafana/provisioning'
      - './minecraft/grafana/dashboards:/etc/grafana/dashboards'
    depends_on:
      - 'prometheus'


volumes:
  prometheus-tsdb: {}
  grafana-lib: {}
  bluemap-data: {}
